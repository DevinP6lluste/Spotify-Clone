[{"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\App.js":"1","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Login.js":"2","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\spotify.js":"3","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\reportWebVitals.js":"4","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Player.js":"5","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\reducer.js":"6","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\index.js":"7","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\DataLayer.js":"8","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Sidebar.js":"9","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Body.js":"10","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Footer.js":"11"},{"size":1004,"mtime":1607079061202,"results":"12","hashOfConfig":"13"},{"size":434,"mtime":1606570927291,"results":"14","hashOfConfig":"13"},{"size":888,"mtime":1606676417028,"results":"15","hashOfConfig":"13"},{"size":375,"mtime":1606551633956,"results":"16","hashOfConfig":"13"},{"size":430,"mtime":1607164479087,"results":"17","hashOfConfig":"13"},{"size":754,"mtime":1607078882343,"results":"18","hashOfConfig":"13"},{"size":694,"mtime":1606986800495,"results":"19","hashOfConfig":"13"},{"size":397,"mtime":1606987042820,"results":"20","hashOfConfig":"13"},{"size":361,"mtime":1607248631027,"results":"21","hashOfConfig":"13"},{"size":182,"mtime":1607081156302,"results":"22","hashOfConfig":"13"},{"size":190,"mtime":1607164735570,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"t9ne3d",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\App.js",["47"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from './Login';\r\nimport { getTokenFromUrl } from \"./spotify\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport Player from './Player';\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nfunction App() {\r\n  const [{ user, token }, dispatch] = useDataLayerValue();\r\n\r\n\r\n  // Run code based on given condition\r\n  useEffect(() => {\r\n    const hash = getTokenFromUrl();\r\n    window.location.hash = \"\";\r\n    const _token = hash.access_token;\r\n\r\n    if (_token) {\r\n\r\n      dispatch({\r\n        type: \"SET_TOKEN\",\r\n        token: _token,\r\n      })\r\n\r\n      spotify.setAccessToken(_token);\r\n\r\n      spotify.getMe().then(user => {\r\n        dispatch({\r\n          type: 'SET_USER',\r\n          user: user\r\n\r\n        })\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return <div className=\"app\">{token ?\r\n      <Player spotify={spotify} /> : \r\n      <Login />}</div>;\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Login.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\spotify.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\reportWebVitals.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Player.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\reducer.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\index.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\DataLayer.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Sidebar.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Body.js",[],"C:\\Users\\Devin\\Documents\\GitHub\\Spotify-Clone\\src\\Footer.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"48","line":41,"column":23},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  39 | \n  40 |   return <div className=\"app\">{token ?\n> 41 |       <Player spotify={} /> : \n     |                       ^\n  42 |       <Login />}</div>;\n  43 | }\n  44 |"]